# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

$ ->
  do ->
    animating = false
    b = document.body

    animatecard = (ev) ->
      if animating == false
        t = ev.target
        if t.className == 'but-nope'
          t.parentNode.classList.add 'nope'
          animating = true
          fireCustomEvent 'nopecard',
            origin: t
            container: t.parentNode
            card: t.parentNode.querySelector('.card')
        if t.className == 'but-yay'
          t.parentNode.classList.add 'yes'
          animating = true
          fireCustomEvent 'yepcard',
            origin: t
            container: t.parentNode
            card: t.parentNode.querySelector('.card')
        if t.classList.contains('current')
          fireCustomEvent 'cardchosen',
            container: getContainer(t)
            card: t
      return

    fireCustomEvent = (name, payload) ->
      newevent = new CustomEvent(name, detail: payload)
      document.body.dispatchEvent newevent
      return

    getContainer = (elm) ->
      origin = elm.parentNode
      if !origin.classList.contains('cardcontainer')
        origin = origin.parentNode
      origin

    animationdone = (ev) ->
      animating = false
      origin = getContainer(ev.target)
      if ev.animationName == 'yay'
        origin.classList.remove 'yes'
      if ev.animationName == 'nope'
        origin.classList.remove 'nope'
      if origin.classList.contains('list')
        if ev.animationName == 'nope' or ev.animationName == 'yay'
          origin.querySelector('.current').remove()
          if !origin.querySelector('.card')
            fireCustomEvent 'deckempty',
              origin: origin.querySelector('button')
              container: origin
              card: null
          else
            origin.querySelector('.card').classList.add 'current'
      return

    b.addEventListener 'nopecard', (ev) ->
      console.log ev.detail.card, ev.detail.card.innerHTML
      return
    b.addEventListener 'yepcard', (ev) ->
      console.log ev.detail.card, ev.detail.card.innerHTML
      return
    b.addEventListener 'deckempty', (ev) ->
      container = ev.detail.container
      list = container.querySelector('.cardlist')
      out = '<li class="card current">#1</li>'
      i = 2
      while i < 6
        out += '<li class="card">#' + i + '</li>'
        i++
      list.innerHTML = out
      return
    document.body.addEventListener 'animationend', animationdone
    document.body.addEventListener 'webkitAnimationEnd', animationdone
    document.body.addEventListener 'click', animatecard
    window.addEventListener 'DOMContentLoaded', ->
      document.body.classList.add 'tinderesque'
      return
    return
  return


$ ->
  do ->
    all = 0
    results = document.querySelector('#results')
    counter = document.querySelector('#counter')

    updatecounter = ->
      --all
      counter.innerHTML = all
      return

    document.body.addEventListener 'yepcard', (ev) ->
      results.innerHTML += '<li>' + ev.detail.card.innerHTML + '</li>'
      updatecounter()
      return
    document.body.addEventListener 'nopecard', (ev) ->
      updatecounter()
      return
    document.body.addEventListener 'deckempty', (ev) ->
      results.classList.add 'live'
      ev.detail.container.style.display = 'none'
      return
    window.addEventListener 'load', (ev) ->
      # check if template is supported
      # browsers without it wouldn't need to
      # do the content shifting
      if 'content' of document.createElement('template')
        # get the template
        t = document.querySelector('template')
        # get its parent element
        list = t.parentNode
        # cache the template content
        contents = t.innerHTML
        # kill the template
        list.removeChild t
        # add the cached content to the parent
        list.innerHTML += contents
      listitems = document.body.querySelectorAll('.card')
      all = listitems.length + 1
      updatecounter()
      return
    return
  return

# ---
# generated by js2coffee 2.2.0